version: '3.8'
# ============================================================================
# = Compose file to be run on remote server (Staging or Production)          =
# = after images have been re-built, typically by Github actions.            =
# ============================================================================
services:
  django_gunicorn:
    image: registry.digitalocean.com/${DO_DOCKER_REGISTRY_NAME_ARG}/plan_visualiser_2023_02-django_gunicorn:${DOCKER_IMAGE_TAG}
    volumes:
    - static:/static
    - /docker_app_root/plan_visualiser_2023_02:/app

    ports:
    - "8000:8000"

    depends_on:
      db:
        condition: service_healthy

    environment:
      - DO_DOCKER_REGISTRY_NAME=${DO_DOCKER_REGISTRY_NAME_ARG}
      - POSTGRES_DB=${POSTGRES_DB_NAME_ARG}
      - POSTGRES_USER=${POSTGRES_USER_ARG}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD_ARG}
      - SECRET_KEY="${DJANGO_SECRET_KEY_ARG}"
      - DJANGO_ENVIRONMENT_TYPE=${DJANGO_ENVIRONMENT_TYPE_ARG}
  nginx:
    image: registry.digitalocean.com/${DO_DOCKER_REGISTRY_NAME_ARG}/plan_visualiser_2023_02-nginx:${DOCKER_IMAGE_TAG}
    volumes:
    - static:/static
    ports:
    - "80:80"
    depends_on:
    - django_gunicorn
  db:
    image: postgres
    environment:
      - "POSTGRES_DB=${POSTGRES_DB_NAME_ARG}"
      - "POSTGRES_USER=${POSTGRES_USER_ARG}"
      - "POSTGRES_PASSWORD=${POSTGRES_PASSWORD_ARG}"
    volumes:
    - data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
volumes:
  static:
  data:
