# Generated by Django 5.1.1 on 2025-01-13 16:49

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Font",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("font_name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="PlotableShape",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("RECTANGLE", "Rectangle"),
                            ("ROUNDED_RECTANGLE", "Rounded Rectangle"),
                            ("BULLET", "Bullet"),
                            ("DIAMOND", "Diamond"),
                            ("ISOSCELES", "Isosceles Triangle"),
                        ],
                        max_length=50,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlotableShapeType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name="StaticContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("red", models.IntegerField(default=0)),
                ("green", models.IntegerField(default=0)),
                ("blue", models.IntegerField(default=0)),
                ("alpha", models.FloatField(default=0)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ["user", "name"],},
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("plan_name", models.CharField(max_length=100)),
                ("file_name", models.CharField(max_length=100)),
                ("file", models.FileField(null=True, upload_to="plan_files")),
                (
                    "file_type_name",
                    models.CharField(
                        choices=[
                            (
                                "excel-01-msp-export-default-01",
                                "Represents mapping of all field names from Microsoft Project export to Excel, using \n        default field names.\n        ",
                            ),
                            (
                                "excel-02-smartsheet-export-01",
                                "Represents one of several field mappings from a Smartsheet export to Excel.  Note that Smartsheet\n        doesn't have build-in columns for ID or Level, so there are no default names.",
                            ),
                        ],
                        max_length=50,
                    ),
                ),
                ("session_id", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlanActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unique_sticky_activity_id", models.CharField(max_length=50)),
                ("activity_name", models.CharField(max_length=200)),
                ("milestone_flag", models.BooleanField(default=False)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("level", models.IntegerField(default=1)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plan",
                    ),
                ),
            ],
            options={"verbose_name_plural": " Plan activities",},
        ),
        migrations.CreateModel(
            name="PlotableShapeAttributesDiamond",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("width", models.FloatField()),
                ("height", models.FloatField()),
                (
                    "plotable_shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotableshape",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlotableShapeAttributesRectangle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("width", models.FloatField()),
                ("height", models.FloatField()),
                (
                    "plotable_shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotableshape",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="plotableshape",
            name="shape_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="plan_visual_django.plotableshapetype",
            ),
        ),
        migrations.CreateModel(
            name="PlotableStyle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("style_name", models.CharField(max_length=100)),
                ("line_thickness", models.IntegerField()),
                ("font_size", models.IntegerField(default=10)),
                (
                    "fill_color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="plotablestyle_fill",
                        to="plan_visual_django.color",
                    ),
                ),
                (
                    "font",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="plan_visual_django.font",
                    ),
                ),
                (
                    "font_color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="plotablestyle_font",
                        to="plan_visual_django.color",
                    ),
                ),
                (
                    "line_color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="plotablestyle_line",
                        to="plan_visual_django.color",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={"ordering": ["user", "style_name"],},
        ),
        migrations.CreateModel(
            name="PlanVisual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("width", models.FloatField(default=30)),
                ("max_height", models.FloatField(default=20)),
                ("include_title", models.BooleanField(default=True)),
                ("track_height", models.FloatField(default=20)),
                ("track_gap", models.FloatField(default=4)),
                ("milestone_width", models.FloatField(default=10)),
                ("swimlane_gap", models.FloatField(default=5)),
                ("default_timeline_height", models.FloatField(default=20)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plan",
                    ),
                ),
                (
                    "default_activity_shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="default_activity_shape",
                        to="plan_visual_django.plotableshape",
                    ),
                ),
                (
                    "default_milestone_shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="default_milestone_shape",
                        to="plan_visual_django.plotableshape",
                    ),
                ),
                (
                    "default_activity_plotable_style",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="default_activity_plotable_style",
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
                (
                    "default_milestone_plotable_style",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="default_milestone_plotable_style",
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
                (
                    "default_swimlane_plotable_style",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="default_swimlane_plotable_style",
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
                (
                    "default_timeline_plotable_style_even",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="default_timeline_plotable_style_even",
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
                (
                    "default_timeline_plotable_style_odd",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="default_timeline_plotable_style_odd",
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SwimlaneForVisual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("swim_lane_name", models.CharField(max_length=51)),
                ("sequence_number", models.IntegerField()),
                (
                    "plan_visual",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.planvisual",
                    ),
                ),
                (
                    "plotable_style",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
            ],
            options={"ordering": ["plan_visual", "sequence_number"],},
        ),
        migrations.CreateModel(
            name="TimelineForVisual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timeline_type",
                    models.CharField(
                        choices=[
                            ("MONTHS", "One label for each month"),
                            (
                                "QUARTERS",
                                "One label for each sequence of three months, variable start",
                            ),
                            (
                                "HALF_YEAR",
                                "One label for each sequence of six months, start on Jan or Jul",
                            ),
                            (
                                "YEAR",
                                "One label for each year covered by the plan, start at Jan",
                            ),
                        ],
                        max_length=20,
                    ),
                ),
                ("timeline_name", models.CharField(max_length=50)),
                ("timeline_height", models.FloatField(default=10)),
                ("sequence_number", models.IntegerField()),
                ("enabled", models.BooleanField(default=False)),
                (
                    "plan_visual",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.planvisual",
                    ),
                ),
                (
                    "plotable_style_even",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plotable_style_even",
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
                (
                    "plotable_style_odd",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="plotable_style_odd",
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
            ],
            options={"ordering": ["plan_visual", "sequence_number"],},
        ),
        migrations.CreateModel(
            name="VisualActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unique_id_from_plan", models.CharField(max_length=50)),
                ("enabled", models.BooleanField()),
                ("vertical_positioning_value", models.FloatField()),
                ("height_in_tracks", models.FloatField(default=1)),
                (
                    "text_horizontal_alignment",
                    models.CharField(
                        choices=[
                            ("LEFT", "Left"),
                            ("CENTER", "Center"),
                            ("RIGHT", "Right"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "text_vertical_alignment",
                    models.CharField(
                        choices=[
                            ("TOP", "Top"),
                            ("MIDDLE", "Middle"),
                            ("BOTTOM", "Bottom"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "text_flow",
                    models.CharField(
                        choices=[
                            ("LFLOW", "Align right, flow to left"),
                            ("RFLOW", "Align left, flow to right"),
                            ("WSHAPE", "Align centre, flow left/right"),
                            ("CLIPPED", "Align centre, clipped to shape"),
                            ("CENTRE", "Align centre"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "plotable_shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotableshape",
                    ),
                ),
                (
                    "plotable_style",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
                (
                    "swimlane",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.swimlaneforvisual",
                    ),
                ),
                (
                    "visual",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.planvisual",
                    ),
                ),
            ],
            options={"verbose_name_plural": "visual activities",},
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.UniqueConstraint(
                fields=("user", "name"), name="unique-color-name-for-user"
            ),
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.CheckConstraint(
                condition=models.Q(("red__gte", 0), ("red__lte", 255)),
                name="Red component must be between 0 and 255 (inclusive)",
            ),
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.CheckConstraint(
                condition=models.Q(("green__gte", 0), ("green__lte", 255)),
                name="Green component must be between 0 and 255 (inclusive)",
            ),
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.CheckConstraint(
                condition=models.Q(("blue__gte", 0), ("blue__lte", 255)),
                name="Blue component must be between 0 and 255 (inclusive)",
            ),
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.CheckConstraint(
                condition=models.Q(("alpha__gte", 0), ("alpha__lte", 1)),
                name="Alpha value must be between 0 and 1",
            ),
        ),
        migrations.AddConstraint(
            model_name="plan",
            constraint=models.UniqueConstraint(
                fields=("user", "plan_name"), name="unique_filename_for_user"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="planactivity",
            unique_together={("plan", "unique_sticky_activity_id")},
        ),
        migrations.AddConstraint(
            model_name="plotablestyle",
            constraint=models.UniqueConstraint(
                fields=("user", "style_name"), name="unique-style-name-for-user"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="planvisual", unique_together={("plan", "name")},
        ),
        migrations.AlterUniqueTogether(
            name="swimlaneforvisual",
            unique_together={
                ("plan_visual", "sequence_number"),
                ("plan_visual", "swim_lane_name"),
            },
        ),
        migrations.AlterUniqueTogether(
            name="timelineforvisual",
            unique_together={("plan_visual", "sequence_number")},
        ),
        migrations.AlterUniqueTogether(
            name="visualactivity", unique_together={("visual", "unique_id_from_plan")},
        ),
    ]
