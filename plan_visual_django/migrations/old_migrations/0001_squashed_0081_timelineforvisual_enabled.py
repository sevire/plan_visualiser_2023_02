# Generated by Django 5.1.1 on 2025-01-02 09:54

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    replaces = [
        ("plan_visual_django", "0001_initial"),
        ("plan_visual_django", "0002_alter_planfieldmappingtype_name"),
        ("plan_visual_django", "0003_alter_planfield_field_name_and_more"),
        ("plan_visual_django", "0004_alter_planfield_field_name"),
        ("plan_visual_django", "0005_alter_planfield_field_name"),
        ("plan_visual_django", "0006_planactivity"),
        ("plan_visual_django", "0007_planactivity_level_planactivity_start_date"),
        ("plan_visual_django", "0008_planactivity_plan"),
        ("plan_visual_django", "0009_alter_swimlaneforvisual_unique_together"),
        ("plan_visual_django", "0010_visualactivity_enabled"),
        ("plan_visual_django", "0011_alter_visualactivity_unique_together"),
        ("plan_visual_django", "0012_alter_visualactivity_swimlane"),
        ("plan_visual_django", "0013_alter_visualactivity_swimlane"),
        ("plan_visual_django", "0014_alter_planfield_field_name"),
        ("plan_visual_django", "0015_alter_swimlaneforvisual_swim_lane_name"),
        ("plan_visual_django", "0016_swimlaneforvisual_sequence_number"),
        ("plan_visual_django", "0017_alter_planactivity_options"),
        ("plan_visual_django", "0018_alter_swimlaneforvisual_options"),
        ("plan_visual_django", "0019_alter_visualactivity_text_flow"),
        ("plan_visual_django", "0020_alter_planfield_field_type_and_more"),
        ("plan_visual_django", "0021_plotablestyle_font_color"),
        ("plan_visual_django", "0022_swimlaneforvisual_plotable_style"),
        ("plan_visual_django", "0023_alter_planmappedfield_input_field_type_and_more"),
        (
            "plan_visual_django",
            "0024_alter_plotableshapetype_name_timelinelabelsforvisual",
        ),
        (
            "plan_visual_django",
            "0025_rename_timelinelabelsforvisual_timelineforvisual_and_more",
        ),
        (
            "plan_visual_django",
            "0026_rename_label_name_timelineforvisual_timeline_name_and_more",
        ),
        ("plan_visual_django", "0027_alter_planmappedfield_input_field_type"),
        ("plan_visual_django", "0028_alter_planmappedfield_input_field_type"),
        ("plan_visual_django", "0029_alter_planmappedfield_input_field_type"),
        ("plan_visual_django", "0030_alter_planactivity_level"),
        ("plan_visual_django", "0031_alter_planfield_field_name_and_more"),
        ("plan_visual_django", "0032_planactivity_milestone_flag"),
        ("plan_visual_django", "0033_remove_planactivity_duration"),
        ("plan_visual_django", "0034_alter_planfield_field_name"),
        ("plan_visual_django", "0035_alter_planfield_field_name"),
        ("plan_visual_django", "0036_plan_plan_name"),
        ("plan_visual_django", "0037_rename_original_file_name_plan_file_name"),
        ("plan_visual_django", "0038_remove_plan_unique_filename_for_user_and_more"),
        ("plan_visual_django", "0039_remove_plan_unique_filename_for_user_and_more"),
        ("plan_visual_django", "0040_alter_planactivity_milestone_flag"),
        (
            "plan_visual_django",
            "0041_planvisual_default_activity_plotable_style_and_more",
        ),
        (
            "plan_visual_django",
            "0042_planvisual_milestone_width_planvisual_swimlane_gap_and_more",
        ),
        ("plan_visual_django", "0043_timelineforvisual_timeline_height"),
        ("plan_visual_django", "0044_plotablestyle_font_size"),
        ("plan_visual_django", "0045_color_user"),
        ("plan_visual_django", "0046_plotablestyle_user"),
        (
            "plan_visual_django",
            "0047_alter_color_name_color_unique_color_name_for_user",
        ),
        ("plan_visual_django", "0048_plotablestyle_unique_style_name_for_user"),
        ("plan_visual_django", "0049_plotableshape_name"),
        ("plan_visual_django", "0050_alter_plotableshape_name_and_more"),
        ("plan_visual_django", "0051_alter_plotableshape_name"),
        ("plan_visual_django", "0052_alter_color_options"),
        ("plan_visual_django", "0053_alter_plotablestyle_options"),
        ("plan_visual_django", "0054_alter_planvisual_unique_together"),
        ("plan_visual_django", "0055_alter_planmappedfield_input_field_type"),
        ("plan_visual_django", "0056_alter_swimlaneforvisual_unique_together"),
        ("plan_visual_django", "0057_alter_timelineforvisual_options_and_more"),
        ("plan_visual_django", "0058_remove_visualactivity_vertical_positioning_type"),
        ("plan_visual_django", "0059_staticcontent"),
        ("plan_visual_django", "0060_alter_filetype_file_type_description"),
        ("plan_visual_django", "0061_filetype_file_type_title"),
        ("plan_visual_django", "0062_alter_plotableshape_name"),
        ("plan_visual_django", "0063_alter_timelineforvisual_timeline_type"),
        ("plan_visual_django", "0064_alter_planfield_field_name_and_more"),
        ("plan_visual_django", "0065_alter_planfield_field_name"),
        ("plan_visual_django", "0066_alter_planmappedfield_mapped_field"),
        ("plan_visual_django", "0067_delete_planfield"),
        ("plan_visual_django", "0068_alter_plan_file_type"),
        ("plan_visual_django", "0069_rename_file_type_plan_file_type_name"),
        ("plan_visual_django", "0070_rename_file_type_name_plan_file_type"),
        ("plan_visual_django", "0071_rename_file_type_plan_file_type_name"),
        (
            "plan_visual_django",
            "0072_remove_planmappedfield_plan_field_mapping_type_and_more",
        ),
        ("plan_visual_django", "0073_planvisual_timeline_height"),
        (
            "plan_visual_django",
            "0074_rename_timeline_height_planvisual_default_timeline_height",
        ),
        ("plan_visual_django", "0075_planvisual_default_timeline_plotable_style"),
        (
            "plan_visual_django",
            "0076_remove_planvisual_default_timeline_plotable_style_and_more",
        ),
        (
            "plan_visual_django",
            "0077_rename_plotable_style_timelineforvisual_plotable_style_odd",
        ),
        ("plan_visual_django", "0078_timelineforvisual_plotable_style_even_and_more"),
        ("plan_visual_django", "0079_alter_timelineforvisual_plotable_style_even"),
        (
            "plan_visual_django",
            "0080_alter_planvisual_default_timeline_plotable_style_even",
        ),
        ("plan_visual_django", "0081_timelineforvisual_enabled"),
    ]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Color",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100, unique=True)),
                ("red", models.IntegerField(default=0)),
                ("green", models.IntegerField(default=0)),
                ("blue", models.IntegerField(default=0)),
                ("alpha", models.FloatField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="FileType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("file_type_name", models.CharField(max_length=50)),
                ("file_type_description", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Font",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("font_name", models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name="Plan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("original_file_name", models.CharField(max_length=100)),
                ("file", models.FileField(null=True, upload_to="plan_files")),
                (
                    "file_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.filetype",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlanField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("field_name", models.CharField(max_length=50)),
                (
                    "field_type",
                    models.CharField(
                        choices=[
                            ("INT", "Integer"),
                            ("FLOAT", "Decimal number"),
                            ("STR", "String"),
                            (
                                "STR_nnd",
                                "String of form nnd where nn is an integer value",
                            ),
                            ("DATE", "Date (without time)"),
                        ],
                        max_length=20,
                    ),
                ),
                ("field_description", models.TextField(max_length=1000)),
                ("required_flag", models.BooleanField(default=True)),
                ("sort_index", models.IntegerField()),
            ],
            options={"ordering": ("sort_index",),},
        ),
        migrations.CreateModel(
            name="PlanFieldMappingType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("description", models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name="PlanVisual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("width", models.FloatField(default=30)),
                ("max_height", models.FloatField(default=20)),
                ("include_title", models.BooleanField(default=True)),
                (
                    "plan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plan",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlotableShape",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlotableShapeType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="PlotableStyle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("style_name", models.CharField(max_length=100)),
                ("line_thickness", models.IntegerField()),
                (
                    "fill_color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="plotablestyle_fill",
                        to="plan_visual_django.color",
                    ),
                ),
                (
                    "font",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="plan_visual_django.font",
                    ),
                ),
                (
                    "line_color",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="plotablestyle_line",
                        to="plan_visual_django.color",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SwimlaneForVisual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("swim_lane_name", models.CharField(max_length=50)),
                (
                    "plan_visual",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.planvisual",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VisualActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unique_id_from_plan", models.CharField(max_length=50)),
                (
                    "vertical_positioning_type",
                    models.CharField(
                        choices=[
                            ("TRACK", "Specify track #"),
                            (
                                "REL_TRACK",
                                "Specify relative to last positioned activity",
                            ),
                            ("AUTO", "Automatic positioning"),
                        ],
                        max_length=20,
                    ),
                ),
                ("vertical_positioning_value", models.FloatField()),
                ("height_in_tracks", models.FloatField(default=1)),
                (
                    "text_horizontal_alignment",
                    models.CharField(
                        choices=[
                            ("LEFT", "Left"),
                            ("CENTER", "Center"),
                            ("RIGHT", "Right"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "text_vertical_alignment",
                    models.CharField(
                        choices=[
                            ("TOP", "Top"),
                            ("MIDDLE", "Middle"),
                            ("BOTTOM", "Bottom"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "text_flow",
                    models.CharField(
                        choices=[
                            ("LFLOW", "Align right, flow to left"),
                            ("RFLOW", "Align left, flow to right"),
                            ("WSHAPE", "Align centre, flow left/right"),
                            ("CLIPPED", "Align centre, clipped to shape"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "plotable_shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotableshape",
                    ),
                ),
                (
                    "plotable_style",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
                (
                    "swimlane",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.swimlaneforvisual",
                    ),
                ),
                (
                    "visual",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.planvisual",
                    ),
                ),
            ],
            options={"verbose_name_plural": "visual activities",},
        ),
        migrations.CreateModel(
            name="PlotableShapeAttributesRectangle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("width", models.FloatField()),
                ("height", models.FloatField()),
                (
                    "plotable_shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotableshape",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PlotableShapeAttributesDiamond",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("width", models.FloatField()),
                ("height", models.FloatField()),
                (
                    "plotable_shape",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotableshape",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="plotableshape",
            name="shape_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="plan_visual_django.plotableshapetype",
            ),
        ),
        migrations.CreateModel(
            name="PlanMappedField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("input_field_name", models.CharField(max_length=50)),
                (
                    "input_field_type",
                    models.CharField(
                        choices=[
                            ("INT", "Integer"),
                            ("FLOAT", "Decimal number"),
                            ("STR", "String"),
                            (
                                "STR_nnd",
                                "String of form nnd where nn is an integer value",
                            ),
                            ("DATE", "Date (without time)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "mapped_field",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.planfield",
                    ),
                ),
                (
                    "plan_field_mapping_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.planfieldmappingtype",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="filetype",
            name="plan_field_mapping_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="plan_visual_django.planfieldmappingtype",
            ),
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.CheckConstraint(
                condition=models.Q(("red__gte", 0), ("red__lte", 255)),
                name="Red component must be between 0 and 255 (inclusive)",
            ),
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.CheckConstraint(
                condition=models.Q(("green__gte", 0), ("green__lte", 255)),
                name="Green component must be between 0 and 255 (inclusive)",
            ),
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.CheckConstraint(
                condition=models.Q(("blue__gte", 0), ("blue__lte", 255)),
                name="Blue component must be between 0 and 255 (inclusive)",
            ),
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.CheckConstraint(
                condition=models.Q(("alpha__gte", 0), ("alpha__lte", 1)),
                name="Alpha value must be between 0 and 1",
            ),
        ),
        migrations.AddConstraint(
            model_name="plan",
            constraint=models.UniqueConstraint(
                fields=("user", "original_file_name"), name="unique_filename_for_user"
            ),
        ),
        migrations.AlterField(
            model_name="planfieldmappingtype",
            name="name",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterUniqueTogether(
            name="swimlaneforvisual",
            unique_together={("plan_visual", "swim_lane_name")},
        ),
        migrations.AddField(
            model_name="visualactivity",
            name="enabled",
            field=models.BooleanField(default=True),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name="visualactivity", unique_together={("visual", "unique_id_from_plan")},
        ),
        migrations.AlterField(
            model_name="visualactivity",
            name="swimlane",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="plan_visual_django.swimlaneforvisual",
            ),
        ),
        migrations.AlterField(
            model_name="swimlaneforvisual",
            name="swim_lane_name",
            field=models.CharField(max_length=51),
        ),
        migrations.AddField(
            model_name="swimlaneforvisual",
            name="sequence_number",
            field=models.IntegerField(default=100),
            preserve_default=False,
        ),
        migrations.AlterModelOptions(
            name="swimlaneforvisual",
            options={"ordering": ["plan_visual", "sequence_number"]},
        ),
        migrations.AddField(
            model_name="plotablestyle",
            name="font_color",
            field=models.ForeignKey(
                default=3,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="plotablestyle_font",
                to="plan_visual_django.color",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="swimlaneforvisual",
            name="plotable_style",
            field=models.ForeignKey(
                default=4,
                on_delete=django.db.models.deletion.CASCADE,
                to="plan_visual_django.plotablestyle",
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="visualactivity",
            name="text_flow",
            field=models.CharField(
                choices=[
                    ("LFLOW", "Align right, flow to left"),
                    ("RFLOW", "Align left, flow to right"),
                    ("WSHAPE", "Align centre, flow left/right"),
                    ("CLIPPED", "Align centre, clipped to shape"),
                    ("CENTRE", "Align centre"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="plotableshapetype",
            name="name",
            field=models.CharField(
                choices=[
                    ("RECTANGLE", "Rectangle"),
                    ("ROUNDED_RECTANGLE", "Rectangle"),
                    ("DIAMOND", "Diamond"),
                    ("ISOSCELES", "Isosceles Triangle"),
                ],
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="TimelineForVisual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "timeline_type",
                    models.CharField(
                        choices=[
                            ("MONTHS", "One label for each month"),
                            (
                                "QUARTERS",
                                "One label for each sequence of three months, variable start",
                            ),
                        ],
                        max_length=20,
                    ),
                ),
                ("timeline_name", models.CharField(max_length=50)),
                (
                    "plan_visual",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.planvisual",
                    ),
                ),
                (
                    "plotable_style",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plotablestyle",
                    ),
                ),
            ],
        ),
        migrations.AlterField(
            model_name="planmappedfield",
            name="input_field_type",
            field=models.CharField(
                choices=[
                    ("INT", "Integer"),
                    ("FLOAT", "Decimal Number"),
                    ("STR", "String"),
                    ("STR_OR_INT", "String or integer"),
                    ("STR_nnd", "String of form nnd where nn is an integer value"),
                    (
                        "STR_duration_msp",
                        "String representing duration from MSP project in Excel",
                    ),
                    ("STR_DATE_DMY_01", "String of form dd MMM YYYY"),
                    ("STR_DATE_DMY_02", "String of form dd MMMMM YYYY HH:MM"),
                    ("DATE", "Date (without time)"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="planfield",
            name="field_type",
            field=models.CharField(
                choices=[
                    ("INT", "Integer"),
                    ("STR", "String"),
                    ("DATE", "Date (without time)"),
                    ("BOOL", "Boolean"),
                ],
                max_length=20,
            ),
        ),
        migrations.CreateModel(
            name="PlanActivity",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("unique_sticky_activity_id", models.CharField(max_length=50)),
                ("activity_name", models.CharField(max_length=200)),
                ("end_date", models.DateField()),
                ("level", models.IntegerField(default=1)),
                ("start_date", models.DateField(default=None)),
                (
                    "plan",
                    models.ForeignKey(
                        default=1,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="plan_visual_django.plan",
                    ),
                ),
                ("milestone_flag", models.BooleanField(default=False)),
            ],
            options={"verbose_name_plural": " Plan activities",},
        ),
        migrations.AlterField(
            model_name="planfield",
            name="field_name",
            field=models.CharField(
                choices=[
                    ("unique_sticky_activity_id", "Unique id for activity"),
                    ("activity_name", "Name of activity"),
                    (
                        "duration",
                        "Work effort for activity (not stored, used to work out whether this is a milestone)",
                    ),
                    ("milestone_flag", "Is this activity a milestone"),
                    ("start_date", "Start date of activity"),
                    ("end_date", "End date of activity"),
                    ("level", "The level in the hierarchy of the an activity"),
                ],
                help_text="field name used in common datastructure for plan",
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="plan",
            name="plan_name",
            field=models.CharField(default="(undefined)", max_length=100),
            preserve_default=False,
        ),
        migrations.RenameField(
            model_name="plan", old_name="original_file_name", new_name="file_name",
        ),
        migrations.RemoveConstraint(
            model_name="plan", name="unique_filename_for_user",
        ),
        migrations.AddConstraint(
            model_name="plan",
            constraint=models.UniqueConstraint(
                fields=("user", "plan_name"), name="unique_filename_for_user"
            ),
        ),
        migrations.AlterField(
            model_name="planactivity",
            name="milestone_flag",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="planvisual",
            name="default_activity_plotable_style",
            field=models.ForeignKey(
                default=2,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="default_activity_plotable_style",
                to="plan_visual_django.plotablestyle",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="planvisual",
            name="default_activity_shape",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="default_activity_shape",
                to="plan_visual_django.plotableshape",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="planvisual",
            name="default_milestone_plotable_style",
            field=models.ForeignKey(
                default=3,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="default_milestone_plotable_style",
                to="plan_visual_django.plotablestyle",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="planvisual",
            name="default_milestone_shape",
            field=models.ForeignKey(
                default=2,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="default_milestone_shape",
                to="plan_visual_django.plotableshape",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="planvisual",
            name="default_swimlane_plotable_style",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="default_swimlane_plotable_style",
                to="plan_visual_django.plotablestyle",
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="planvisual",
            name="milestone_width",
            field=models.FloatField(default=10),
        ),
        migrations.AddField(
            model_name="planvisual",
            name="swimlane_gap",
            field=models.FloatField(default=5),
        ),
        migrations.AddField(
            model_name="planvisual",
            name="track_gap",
            field=models.FloatField(default=4),
        ),
        migrations.AddField(
            model_name="planvisual",
            name="track_height",
            field=models.FloatField(default=20),
        ),
        migrations.AddField(
            model_name="timelineforvisual",
            name="timeline_height",
            field=models.FloatField(default=10),
        ),
        migrations.AddField(
            model_name="plotablestyle",
            name="font_size",
            field=models.IntegerField(default=10),
        ),
        migrations.AddField(
            model_name="color",
            name="user",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="plotablestyle",
            name="user",
            field=models.ForeignKey(
                default=1,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name="color", name="name", field=models.CharField(max_length=100),
        ),
        migrations.AddConstraint(
            model_name="color",
            constraint=models.UniqueConstraint(
                fields=("user", "name"), name="unique-color-name-for-user"
            ),
        ),
        migrations.AddConstraint(
            model_name="plotablestyle",
            constraint=models.UniqueConstraint(
                fields=("user", "style_name"), name="unique-style-name-for-user"
            ),
        ),
        migrations.AlterField(
            model_name="plotableshapetype",
            name="name",
            field=models.CharField(max_length=20),
        ),
        migrations.AlterModelOptions(
            name="color", options={"ordering": ["user", "name"]},
        ),
        migrations.AlterModelOptions(
            name="plotablestyle", options={"ordering": ["user", "style_name"]},
        ),
        migrations.AlterUniqueTogether(
            name="planvisual", unique_together={("plan", "name")},
        ),
        migrations.AlterField(
            model_name="planmappedfield",
            name="input_field_type",
            field=models.CharField(
                choices=[
                    ("INT", "Integer"),
                    ("FLOAT", "Decimal Number"),
                    ("STR", "String"),
                    ("STR_OR_INT", "String or integer"),
                    ("STR_nnd", "String of form nnd where nn is an integer value"),
                    (
                        "STR_duration_msp",
                        "String representing duration from MSP project in Excel",
                    ),
                    ("STR_DATE_DMY_01", "String of form dd MMM YYYY"),
                    ("STR_DATE_DMY_02", "String of form dd MMMMM YYYY HH:MM"),
                    ("STR_MSTONE_YES_NO", "Milestone flag as string, Yes or No"),
                    ("DATE", "Date (without time)"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="swimlaneforvisual",
            unique_together={
                ("plan_visual", "sequence_number"),
                ("plan_visual", "swim_lane_name"),
            },
        ),
        migrations.AlterModelOptions(
            name="timelineforvisual",
            options={"ordering": ["plan_visual", "sequence_number"]},
        ),
        migrations.AddField(
            model_name="timelineforvisual",
            name="sequence_number",
            field=models.IntegerField(default=23),
            preserve_default=False,
        ),
        migrations.AlterUniqueTogether(
            name="timelineforvisual",
            unique_together={("plan_visual", "sequence_number")},
        ),
        migrations.RemoveField(
            model_name="visualactivity", name="vertical_positioning_type",
        ),
        migrations.CreateModel(
            name="StaticContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("content", models.TextField()),
            ],
        ),
        migrations.AlterField(
            model_name="filetype",
            name="file_type_description",
            field=models.TextField(max_length=1000),
        ),
        migrations.AddField(
            model_name="filetype",
            name="file_type_title",
            field=models.CharField(default="dummy", max_length=50),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="plotableshape",
            name="name",
            field=models.CharField(
                choices=[
                    ("RECTANGLE", "Rectangle"),
                    ("ROUNDED_RECTANGLE", "Rounded Rectangle"),
                    ("BULLET", "Bullet"),
                    ("DIAMOND", "Diamond"),
                    ("ISOSCELES", "Isosceles Triangle"),
                ],
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="timelineforvisual",
            name="timeline_type",
            field=models.CharField(
                choices=[
                    ("MONTHS", "One label for each month"),
                    (
                        "QUARTERS",
                        "One label for each sequence of three months, variable start",
                    ),
                    (
                        "HALF_YEAR",
                        "One label for each sequence of six months, start on Jan or Jul",
                    ),
                    (
                        "YEAR",
                        "One label for each year covered by the plan, start at Jan",
                    ),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="planfield",
            name="field_name",
            field=models.CharField(
                choices=[
                    ("unique_sticky_activity_id", "Unique id for activity"),
                    ("activity_name", "Name of activity"),
                    (
                        "duration",
                        "Work effort for activity (not stored, used to work out whether this is a milestone)",
                    ),
                    ("milestone_flag", "Is this activity a milestone"),
                    ("start_date", "Start date of activity"),
                    ("end_date", "End date of activity"),
                    ("level", "The level in the hierarchy of the an activity"),
                ],
                help_text="field name used in common datastructure for plan",
                max_length=50,
            ),
        ),
        migrations.AlterField(
            model_name="planmappedfield",
            name="mapped_field",
            field=models.CharField(
                choices=[
                    ("STICKY_UID", "STICKY_UID"),
                    ("NAME", "NAME"),
                    ("MILESTONE_FLAG", "MILESTONE_FLAG"),
                    ("DURATION", "DURATION"),
                    ("START", "START"),
                    ("END", "END"),
                    ("LEVEL", "LEVEL"),
                ],
                max_length=50,
            ),
        ),
        migrations.DeleteModel(name="PlanField",),
        migrations.RenameField(
            model_name="plan", old_name="file_type", new_name="file_type_name",
        ),
        migrations.RemoveField(
            model_name="planmappedfield", name="plan_field_mapping_type",
        ),
        migrations.AlterField(
            model_name="plan",
            name="file_type_name",
            field=models.CharField(
                choices=[
                    (
                        "excel-01-msp-export-default-01",
                        "Represents mapping of all field names from Microsoft Project export to Excel, using \n        default field names.\n        ",
                    ),
                    (
                        "excel-02-smartsheet-export-01",
                        "Represents one of several field mappings from a Smartsheet export to Excel.  Note that Smartsheet\n        doesn't have build-in columns for ID or Level, so there are no default names.",
                    ),
                ],
                max_length=50,
            ),
        ),
        migrations.AlterUniqueTogether(
            name="planactivity",
            unique_together={("plan", "unique_sticky_activity_id")},
        ),
        migrations.DeleteModel(name="FileType",),
        migrations.DeleteModel(name="PlanFieldMappingType",),
        migrations.DeleteModel(name="PlanMappedField",),
        migrations.AddField(
            model_name="planvisual",
            name="default_timeline_height",
            field=models.FloatField(default=20),
        ),
        migrations.AddField(
            model_name="planvisual",
            name="default_timeline_plotable_style_odd",
            field=models.ForeignKey(
                default=41,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="default_timeline_plotable_style_odd",
                to="plan_visual_django.plotablestyle",
            ),
            preserve_default=False,
        ),
        migrations.RenameField(
            model_name="timelineforvisual",
            old_name="plotable_style",
            new_name="plotable_style_odd",
        ),
        migrations.AlterField(
            model_name="timelineforvisual",
            name="plotable_style_odd",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plotable_style_odd",
                to="plan_visual_django.plotablestyle",
            ),
        ),
        migrations.AddField(
            model_name="timelineforvisual",
            name="plotable_style_even",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="plotable_style_even",
                to="plan_visual_django.plotablestyle",
            ),
        ),
        migrations.AddField(
            model_name="planvisual",
            name="default_timeline_plotable_style_even",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="default_timeline_plotable_style_even",
                to="plan_visual_django.plotablestyle",
            ),
        ),
        migrations.AddField(
            model_name="timelineforvisual",
            name="enabled",
            field=models.BooleanField(default=False),
        ),
    ]
