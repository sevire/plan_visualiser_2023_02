name: Deploy from Development branch to Staging server

on:
  push:
    branches: [ "Development" ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Deploy to Staging'
        required: true

jobs:
  build_and_push:

    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.10']

    steps:
    - name: Checkout Development branch
      uses: actions/checkout@v3

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_DOCKER_REGISTRY_API_TOKEN }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Build a Docker image of your application in your registry and tag the image with the $GITHUB_SHA. xxx
    - name: Build Docker image for Nginx
      run: docker build -t ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-nginx:$(echo $GITHUB_SHA | head -c7) .

    - name: Build Docker image for Gunicorn
      run: docker build -t ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-django_gunicorn:$(echo $GITHUB_SHA | head -c7) .

    - name: Build Docker image for Postgres
      run: docker build -t ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/postgres:$(echo $GITHUB_SHA | head -c7) .

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Push Nginx image to DigitalOcean Container Registry
      run: docker push ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-nginx:$(echo $GITHUB_SHA | head -c7)

    - name: Push Gunicorn image to DigitalOcean Container Registry
      run: docker push ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-django_gunicorn:$(echo $GITHUB_SHA | head -c7)

    - name: Push Postgres image to DigitalOcean Container Registry
      run: docker push ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/postgres:$(echo $GITHUB_SHA | head -c7)

  deploy-code:
    runs-on: ubuntu-latest
    needs: deploy-code

    steps:
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DO_DOCKER_REGISTRY_API_TOKEN }}

    - name: SSH to Staging server (using doctl) and pull latest code for Development branch
      run: |
        doctl compute ssh "PV-01"
        # Pull latest app code
        cd /docker_app_root/plan_visualiser_2023_02
        git pull
        git status

  deploy-docker-images:
    runs-on: ubuntu-latest
    needs: build_and_push

    steps:
    - name: Deploy to Digital Ocean droplet via SSH action
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.DO_DROPLET_STAGING_HOST_IP }}
        username: ${{ secrets.STAGING_DROPLET_SSH_USER_NAME }}
        key: ${{ secrets.DO_STAGING_DROPLET_SSH_KEY }}
        envs: IMAGE_NAME,REGISTRY,{{ secrets.DO_DOCKER_REGISTRY_API_TOKEN }},GITHUB_SHA
        script: |
          # Login to registry
          docker login -u ${{ secrets.DO_DOCKER_REGISTRY_API_TOKEN }} -p ${{ secrets.DO_DOCKER_REGISTRY_API_TOKEN }} registry.digitalocean.com
          
          # Stop running Nginx container and remove old container.
          docker stop plan_visualiser_2023_02-nginx
          docker rm plan_visualiser_2023_02-nginx
          
          # Stop running Gunicorn container and remove old container.
          docker stop plan_visualiser_2023_02-django_gunicorn
          docker rm plan_visualiser_2023_02-django_gunicorn
          
          # Stop running Postgres container and remove old container.
          docker stop postgres
          docker rm postgres
          
          # Run a new Nginx container from a new image
          docker run -d \
          --restart always \
          --name plan_visualiser_2023_02-nginx \
          ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-nginx:$(echo $GITHUB_SHA | head -c7)

          # Run a new Gunicorn container from a new image
          docker run -d \
          --restart always \
          --name plan_visualiser_2023_02-django_gunicorn \
          ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-django_gunicorn:$(echo $GITHUB_SHA | head -c7)

          # Run a new Postgres container from a new image
          docker run -d \
          --restart always \
          --name postgres \
          ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/postgres:$(echo $GITHUB_SHA | head -c7)
