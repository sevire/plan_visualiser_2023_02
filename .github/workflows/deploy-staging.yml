---
name: Deploy from Development branch to Staging server
on:
  push:
    branches:
      - Development
  workflow_dispatch:
    inputs:
      version:
        description: Deploy to Staging
        required: true
jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version:
          - "3.10"
    steps:
      - name: Checkout Development branch
        uses: actions/checkout@v3
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_DOCKER_REGISTRY_API_TOKEN }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build Docker image for Nginx
        run: docker build -t ${{ secrets.DO_DOCKER_REGISTRY_NAME
          }}/plan_visualiser_2023_02-nginx:$(echo $GITHUB_SHA | head -c7) .
      - name: Build Docker image for Gunicorn
        run: docker build -t ${{ secrets.DO_DOCKER_REGISTRY_NAME
          }}/plan_visualiser_2023_02-django_gunicorn:$(echo $GITHUB_SHA | head
          -c7) .
      - name: Build Docker image for Postgres
        run: docker build -t ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/postgres:$(echo
          $GITHUB_SHA | head -c7) .
      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 1200
      - name: Push Nginx image to DigitalOcean Container Registry
        run: docker push ${{ secrets.DO_DOCKER_REGISTRY_NAME
          }}/plan_visualiser_2023_02-nginx:$(echo $GITHUB_SHA | head -c7)
      - name: Push Gunicorn image to DigitalOcean Container Registry
        run: docker push ${{ secrets.DO_DOCKER_REGISTRY_NAME
          }}/plan_visualiser_2023_02-django_gunicorn:$(echo $GITHUB_SHA | head
          -c7)
      - name: Push Postgres image to DigitalOcean Container Registry
        run: docker push ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/postgres:$(echo
          $GITHUB_SHA | head -c7)
  deploy_code_and_pull_docker:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DO_DOCKER_REGISTRY_API_TOKEN }}
      - name: install ssh keys
        run: >
          install -m 600 -D /dev/null ~/.ssh/id_rsa

          echo "${{ secrets.DO_STAGING_DROPLET_SSH_KEY }}" > ~/.ssh/id_rsa

          ssh-keyscan -H ${{ secrets.DO_DROPLET_STAGING_HOST_IP }} > ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh root@${{ secrets.DO_DROPLET_STAGING_HOST_IP }} "cd
          /docker_app_root/plan_visualiser_2023_02 && git pull"
      - name: pull docker images and restart containers
        run: >
          # Login to registry
          doctl registry login

          # Stop running Nginx container and remove old container.
          docker stop plan_visualiser_2023_02-nginx-1
          docker rm plan_visualiser_2023_02-nginx-1

          # Stop running Gunicorn container and remove old container.
          docker stop plan_visualiser_2023_02-django_gunicorn-1
          docker rm plan_visualiser_2023_02-django_gunicorn-1

          # Stop running Postgres container and remove old container.
          docker stop plan_visualiser_2023_02-db-1
          docker rm plan_visualiser_2023_02-db-1

          # Run a new Nginx container from a new image
          docker run -d \
          --restart always \
          --name plan_visualiser_2023_02-nginx-1 \
          ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-nginx:$(echo $GITHUB_SHA | head -c7)

          # Run a new Gunicorn container from a new image
          docker run -d \
          --restart always \
          --name plan_visualiser_2023_02-django_gunicorn-1 \
          ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-django_gunicorn:$(echo $GITHUB_SHA | head -c7)

          # Run a new Postgres container from a new image
          docker run -d \
          --restart always \
          --name plan_visualiser_2023_02-db-1 \
          ${{ secrets.DO_DOCKER_REGISTRY_NAME }}/postgres:$(echo $GITHUB_SHA | head -c7)
      - name: clean up after ssh session.
        run: rm -rf ~/.ssh
