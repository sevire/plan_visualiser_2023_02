name: Common Deployment Workflow

on:
  workflow_call:
    inputs:
      branch:
        description: Branch being deployed (e.g., development, main)
        required: true
        type: string
      environment:
        description: Deployment environment (e.g., staging, live)
        required: true
        type: string
      python_version:
        description: Python version
        required: true
        type: string
    secrets:
      DATABASE_URL:
        required: true
      DOCKER_REGISTRY_API_TOKEN:
        required: true
      DOCKER_REGISTRY_NAME:
        required: true
      SSH_PRIVATE_KEY:
        required: true
      SERVER_HOST_IP:
        required: true

jobs:
  pre-deploy-test:
    uses: ./.github/workflows/_common-test.yml
    with:
      python_version: ${{ inputs.python_version }}
      environment: ${{ inputs.environment }}

  deploy:
    needs: [pre-deploy-test]
    runs-on: ubuntu-latest
    steps:
      # Existing deployment steps
      - name: Checkout ${inputs.branch}
        uses: actions/checkout@v3

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SERVER_HOST_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to Server (${inputs.environment})
        run: |
          ssh root@${{ secrets.SERVER_HOST_IP }} "bash -s" << EOF
          docker pull ${{ secrets.DOCKER_REGISTRY_NAME }}/nginx:${{ github.sha }}
          docker pull ${{ secrets.DOCKER_REGISTRY_NAME }}/gunicorn:${{ github.sha }}
          docker-compose -f /path/to/docker-compose.yml up -d
          EOF

      - name: Clean Up
        run: rm -rf ~/.ssh