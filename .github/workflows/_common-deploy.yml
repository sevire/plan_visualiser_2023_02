name: Common Deployment Workflow

on:
  workflow_call:
    inputs:
      branch:
        description: Branch being deployed (e.g., development, main)
        required: true
        type: string
      environment:
        description: Deployment environment (e.g., staging, live)
        required: true
        type: string
      python_version:
        description: Python version
        required: true
        type: string
    secrets:
      SECRET_DO_DROPLET_SSH_PRIVATE_KEY:
        required: true
      SECRET_DO_DROPLET_HOST_IP:
        required: true
      SECRET_POSTGRES_DB_NAME:
        required: true
      SECRET_POSTGRES_USER:
        required: true
      SECRET_POSTGRES_PASSWORD:
        required: true
      SECRET_DJANGO_SECRET_KEY:
        required: true
      SECRET_DO_DOCKER_REGISTRY_NAME:
        required: true
      SECRET_DO_DOCKER_REGISTRY_API_TOKEN:
        required: true

jobs:
  pre-deploy-test:
    uses: ./.github/workflows/_common-test.yml
    with:
      python_version: ${{ inputs.python_version }}
      environment: ${{ inputs.environment }}
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [ "${{ inputs.python_version }}" ]
    steps:
    - name: Checkout Development branch
      uses: actions/checkout@v3

    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.SECRET_DO_DOCKER_REGISTRY_API_TOKEN }}

    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ inputs.python-version }}

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Build Docker image for Nginx
      run: docker build
        --file ./devops/docker/nginx/Dockerfile
        --tag ${{ secrets.SECRET_DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-nginx:$(echo $GITHUB_SHA | head -c7)
        .

    - name: Build Docker image for Gunicorn
      run: docker build
        --file ./devops/docker/gunicorn/Dockerfile
        --tag ${{ secrets.SECRET_DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-django_gunicorn:$(echo $GITHUB_SHA | head -c7)
        .

    - name: Log in to DigitalOcean Container Registry with short-lived credentials
      run: doctl registry login --expiry-seconds 1200

    - name: Push Nginx image to DigitalOcean Container Registry
      run: docker push ${{ secrets.SECRET_DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-nginx:$(echo $GITHUB_SHA | head -c7)

    - name: Push Gunicorn image to DigitalOcean Container Registry
      run: docker push ${{ secrets.SECRET_DO_DOCKER_REGISTRY_NAME }}/plan_visualiser_2023_02-django_gunicorn:$(echo $GITHUB_SHA | head -c7)

  deploy:
    needs: [pre-deploy-test]
    runs-on: ubuntu-latest
    steps:
      # Existing deployment steps
      - name: Checkout ${{ inputs.branch }}
        uses: actions/checkout@v3

      - name: Install SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.SECRET_DO_DROPLET_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SECRET_DO_DROPLET_HOST_IP }}" > ~/.ssh/known_hosts

      - name: Connect and pull Docker images on droplet
        run: |
          chmod +x ./deploy_on_remote.sh  # Note this is on the runner - not the live server!!
          ssh -o StrictHostKeyChecking=no root@"${{ secrets.SECRET_DO_DROPLET_HOST_IP }}" 'bash -s' -- "${{ secrets.SECRET_POSTGRES_DB_NAME }}" "${{ secrets.SECRET_POSTGRES_USER }}" "${{ secrets.SECRET_POSTGRES_PASSWORD }}" "${{ secrets.SECRET_DJANGO_SECRET_KEY }}" $(echo $GITHUB_SHA | head -c7) staging "${{ secrets.SECRET_DO_DOCKER_REGISTRY_NAME }}" "${{ secrets.SECRET_DO_DOCKER_REGISTRY_API_TOKEN }}" < ./deploy_on_remote.sh

      - name: Clean up SSH keys
        run: rm -rf ~/.ssh
